---
- name: Stop docker if running
  service:
    name: "docker"
    enabled: yes
    state: stopped
  ignore_errors: yes

- name: create docker config directory
  file:
    path: /etc/docker
    state: directory
    mode: "u+rwX,a-rX"
    owner: root
    group: root

# configure docker deamon json file
- name: configure docker daemon.json
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: 0644
    owner: root

- name: Add Docker repository key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Make sure dpkg-dev is installed to get arch
  apt:
    update_cache: yes
    cache_valid_time: 600
    name:
      - 'dpkg-dev'

- name: Get dep arch into variable
  ansible.builtin.shell: "dpkg-architecture -q DEB_BUILD_ARCH"
  register: deb_arch
  ignore_errors: true

- name: Add docker repo for apt
  apt_repository:
    repo: 'deb [arch={{ deb_arch.stdout }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
    #    repo: 'deb [arch={{ deb_arch.stdout }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} edge'
    #    repo: 'deb [arch={{ deb_arch.stdout }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} test'
    state: present
    update_cache: yes

- name: Insall docker
  apt:
    update_cache: yes
    cache_valid_time: 600
    name:
    - 'docker-ce'
    - 'cgroup-tools'

- name: Make sure compose is not installed via apt
  apt:
    update_cache: yes
    cache_valid_time: 600
    state: absent
    name:
    - 'docker-compose'

- name: Install docker python modules
  pip:
    name:
      - docker-compose
      - boto3
    extra_args: ' --upgrade '

- name: Start Docker
  service:
    name: "docker"
    enabled: yes
    state: restarted
  ignore_errors: yes

- name: Enable required cgroup features.
  lineinfile:
    path: /etc/default/grub
    backrefs: True
    regexp: GRUB_CMDLINE_LINE=
    line: GRUB_CMDLINE_LINE="quiet splash cgroup_enable=memory swapaccount=1"
    state: present
  register: update_grub

- name: Update grub
  command: update-grub2
  when: update_grub is changed

#- name: Reboot server to apply kernel changes
#  reboot:
#  when: update_grub is changed
#
#- name: Wait for instance to come online (10 minute timeout)
#  wait_for_connection:
#    connect_timeout: 20
#    sleep: 5
#    delay: 5
#    timeout: 300
#  when: update_grub is changed

#- name: Docker login
#  command:  >
#    docker login --username {{DOCKER_HUB_USERNAME}} --password {{DOCKER_HUB_PASS}}
#  ignore_errors: true
